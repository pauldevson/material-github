{"version":3,"sources":["features/counter/CounterReducer.js","store.js","features/counter/actionTypes.js","components/ComingSoon.js","components/repo/RepoHeader.js","components/repo/issues/IssueRow.js","components/repo/issues/index.js","components/repo/index.js","App.js","serviceWorker.js","index.js","images/under-construction.png"],"names":["initialState","value","rootReducer","combineReducers","count","state","action","type","reduxDevtoolsEnhancer","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","useStyles","makeStyles","imageWrapper","width","textAlign","comingSoonImage","display","maxWidth","margin","ComingSoon","classes","className","src","ComingSoonImage","alt","Typography","variant","Link","href","rel","target","a11yProps","index","id","LinkTab","props","history","useHistory","Tab","component","onClick","event","preventDefault","push","LinkTabLabelWithIcon","text","Icon","style","theme","root","flexGrow","backgroundColor","palette","background","paper","repoNameBar","padding","repoNameIcon","verticalAlign","tabsAppBarWrapper","position","top","zIndex","boxShadow","tabsAppBar","location","url","useRouteMatch","urls","code","issues","pulls","settings","React","useState","startsWith","getSelectedTabIndex","pathname","selectedTab","setSelectedTabValue","Container","Chip","avatar","Avatar","label","color","clickable","AppBar","elevation","Tabs","indicatorColor","textColor","onChange","_","aria-label","tabs","CodeIcon","BugReport","CallMergeIcon","SettingsIcon","marginTop","spacing","marginBottom","avatarWrapper","contentWrapper","marginLeft","flex","IssueRow","title","description","user","labels","Box","Card","p","defaultProps","Issues","Repo","match","path","height","RepoHeader","exact","createMuiTheme","default","primary","green","secondary","grey","App","ThemeProvider","CssBaseline","basename","process","to","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.176d92e7.chunk.js","sourcesContent":["import { INCREMENT_COUNTER } from './actionTypes';\n\nconst initialState = {\n  value: 0,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT_COUNTER:\n      return { ...state, value: state.value + 1 };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers, createStore } from 'redux';\nimport { CounterReducer } from './features/counter';\n\n/* Create root reducer, containing all features of the application */\nconst rootReducer = combineReducers({\n  count: CounterReducer,\n});\n\n// initialize Redux Dev Tools, if they are installed in browser.\n/* eslint-disable no-underscore-dangle */\nconst reduxDevtoolsEnhancer =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n/* eslint-enable */\n\nconst store = createStore(rootReducer, reduxDevtoolsEnhancer);\n\nexport default store;\n","export const INCREMENT_COUNTER = 'INCREMENT_COUNTER';\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport ComingSoonImage from 'images/under-construction.png';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles({\n  imageWrapper: {\n    width: '100%',\n    textAlign: 'center',\n  },\n  comingSoonImage: {\n    display: 'block',\n    width: '80%',\n    maxWidth: '300px',\n    margin: 'auto',\n  },\n});\n\nexport default function ComingSoon() {\n  const classes = useStyles();\n  return (\n    <div className={classes.imageWrapper}>\n      <img\n        src={ComingSoonImage}\n        alt=\"Coming soon\"\n        className={classes.comingSoonImage}\n      />\n      <Typography variant=\"body1\">\n        <Typography variant=\"h5\">Wanna help?</Typography>\n        Feel free to contribute on{' '}\n        <Link\n          href=\"https://github.com/paulsancer/material-github\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          GitHub\n        </Link>\n        .\n      </Typography>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport CodeIcon from '@material-ui/icons/Code';\nimport BugReport from '@material-ui/icons/BugReport';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport CallMergeIcon from '@material-ui/icons/CallMerge';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst a11yProps = index => ({\n  id: `nav-tab-${index}`,\n  'aria-controls': `nav-tabpanel-${index}`,\n});\n\nconst LinkTab = props => {\n  const history = useHistory();\n  return (\n    <Tab\n      component=\"a\"\n      onClick={event => {\n        event.preventDefault();\n        // eslint-disable-next-line fp/no-mutating-methods\n        history.push(`${props.href}`);\n      }}\n      {...props}\n    />\n  );\n};\n\nLinkTab.propTypes = {\n  href: PropTypes.string.isRequired,\n};\n\nconst LinkTabLabelWithIcon = ({ text, Icon }) => (\n  <span style={{ display: 'flex' }}>\n    <Icon />\n    &nbsp;{text}\n  </span>\n);\nLinkTabLabelWithIcon.propTypes = {\n  text: PropTypes.string.isRequired,\n  Icon: PropTypes.func.isRequired,\n};\n\nconst getSelectedTabIndex = (urls, location) => {\n  if (location.startsWith(urls.issues)) return 1;\n  if (location.startsWith(urls.pulls)) return 2;\n  if (location.startsWith(urls.settings)) return 3;\n  if (location.startsWith(urls.code)) return 0;\n\n  return -1;\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  repoNameBar: {\n    padding: '20px 0',\n  },\n  repoNameIcon: {\n    verticalAlign: 'middle',\n  },\n  tabsAppBarWrapper: {\n    backgroundColor: '#303030',\n    position: 'sticky',\n    top: 0,\n    zIndex: 9999,\n    boxShadow: '0 4px 2px -2px rgba(0,0,0,0.3)',\n  },\n  tabsAppBar: {\n    backgroundColor: 'transparent',\n  },\n}));\n\nexport default () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const { location } = history;\n  const match = useRouteMatch();\n  const { url } = match;\n\n  const urls = {\n    code: url,\n    issues: `${url}/issues`,\n    pulls: `${url}/pulls`,\n    settings: `${url}/settings`,\n  };\n\n  const [selectedTab, setSelectedTabValue] = React.useState(\n    getSelectedTabIndex(urls, location.pathname)\n  );\n\n  const handleTabChange = (_, value) => {\n    setSelectedTabValue(value);\n  };\n\n  return (\n    <>\n      <div className={classes.root}>\n        <Container maxWidth=\"lg\">\n          <div className={classes.repoNameBar}>\n            <Typography variant=\"body1\" component=\"span\">\n              <Chip\n                avatar={\n                  <Avatar\n                    alt=\"Natacha\"\n                    src=\"https://avatars3.githubusercontent.com/u/19829269?s=460&v=4\"\n                  />\n                }\n                label=\"paulsancer\"\n                color=\"secondary\"\n                component=\"a\"\n                href=\"#\"\n                clickable\n              />{' '}\n              /{' '}\n              <Chip\n                label=\"material-github\"\n                color=\"secondary\"\n                // icon={<StorageIcon />}\n                component=\"a\"\n                href=\"#\"\n                clickable\n              />\n            </Typography>\n          </div>\n        </Container>\n      </div>\n      <div className={classes.tabsAppBarWrapper}>\n        <AppBar\n          position=\"sticky\"\n          color=\"transparent\"\n          elevation={0}\n          classes={{ root: classes.tabsAppBar }}\n        >\n          <Container maxWidth=\"lg\">\n            <Tabs\n              variant=\"scrollable\"\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              value={selectedTab}\n              onChange={handleTabChange}\n              aria-label=\"nav tabs example\"\n              className={classes.tabs}\n            >\n              <LinkTab\n                label={\n                  <LinkTabLabelWithIcon text=\"Source Code\" Icon={CodeIcon} />\n                }\n                href={urls.code}\n                {...a11yProps(urls.code)}\n              />\n              <LinkTab\n                label={<LinkTabLabelWithIcon text=\"Issues\" Icon={BugReport} />}\n                href={urls.issues}\n                {...a11yProps(urls.issues)}\n              />\n              <LinkTab\n                label={\n                  <LinkTabLabelWithIcon\n                    text=\"Pull Requests\"\n                    Icon={CallMergeIcon}\n                  />\n                }\n                href={urls.pulls}\n                {...a11yProps(urls.pulls)}\n              />\n              <LinkTab\n                label={\n                  <LinkTabLabelWithIcon text=\"Settings\" Icon={SettingsIcon} />\n                }\n                href={urls.settings}\n                {...a11yProps(urls.settings)}\n              />\n            </Tabs>\n          </Container>\n        </AppBar>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  avatarWrapper: {\n    display: 'inline-block',\n    // width: '80px',\n  },\n  contentWrapper: {\n    display: 'inline-block',\n    width: 'auto',\n    marginLeft: '1rem',\n  },\n  flex: { display: 'flex' },\n}));\n\nconst IssueRow = ({ id, title, description, user, labels }) => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      <Card elevation={1}>\n        <Box p={2} className={classes.flex}>\n          <div className={classes.avatarWrapper}>\n            <Avatar />\n          </div>\n          <div className={classes.contentWrapper}>\n            <Typography variant=\"h6\">\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"span\">\n                #{id}\n              </Typography>{' '}\n              {title}\n            </Typography>\n            <Typography variant=\"body1\">{description}</Typography>\n          </div>\n        </Box>\n      </Card>\n    </Box>\n  );\n};\n\nIssueRow.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  user: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n    avatarUrl: PropTypes.string.isRequired,\n  }).isRequired,\n  labels: PropTypes.arrayOf({\n    color: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n  }),\n};\n\nIssueRow.defaultProps = {\n  labels: [],\n};\n\nexport default IssueRow;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport IssueRow from './IssueRow';\n\nexport default function Issues() {\n  return (\n    <Container>\n      <IssueRow\n        id={1}\n        title=\"I am tired of lorem ipsum\"\n        description=\"but lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spaces\"\n      />\n      <IssueRow\n        id={2}\n        title=\"I am tired of lorem ipsum\"\n        description=\"but lorem ipsum est a simply dummy text for filling out spaces\"\n      />\n      <IssueRow\n        id={1}\n        title=\"I am tired of lorem ipsum\"\n        description=\"but lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spaces\"\n      />\n      <IssueRow\n        id={2}\n        title=\"I am tired of lorem ipsum\"\n        description=\"but lorem ipsum est a simply dummy text for filling out spaces\"\n      />\n      <IssueRow\n        id={1}\n        title=\"I am tired of lorem ipsum\"\n        description=\"but lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spaces\"\n      />\n      <IssueRow\n        id={2}\n        title=\"I am tired of lorem ipsum\"\n        description=\"but lorem ipsum est a simply dummy text for filling out spaces\"\n      />\n      <IssueRow\n        id={1}\n        title=\"I am tired of lorem ipsum\"\n        description=\"but lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spacesbut lorem ipsum est a simply dummy text for filling out spaces\"\n      />\n      <IssueRow\n        id={2}\n        title=\"I am tired of lorem ipsum\"\n        description=\"but lorem ipsum est a simply dummy text for filling out spaces\"\n      />\n    </Container>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Route, useHistory, useRouteMatch } from 'react-router-dom';\nimport ComingSoon from 'components/ComingSoon';\nimport RepoHeader from './RepoHeader';\nimport Issues from './issues';\n// import Layout from './Layout';\n\nconst Repo = () => {\n  const match = useRouteMatch();\n  const { url, path } = match;\n\n  return (\n    <>\n      <div style={{ height: '40px' }} />\n      <RepoHeader />\n      <div id=\"repo-content-wrapper\">\n        <Switch>\n          <Route exact path={`${path}`} component={ComingSoon} />\n          <Route exact path={`${path}/issues`} component={Issues} />\n          <Route exact path={`${path}/pulls`} component={ComingSoon} />\n          <Route exact path={`${path}/settings`} component={ComingSoon} />\n        </Switch>\n      </div>\n    </>\n  );\n};\n\nexport default Repo;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport green from '@material-ui/core/colors/lightGreen';\nimport grey from '@material-ui/core/colors/grey';\n\nimport Repo from 'components/repo';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    background: {\n      default: '#212121',\n      paper: '#303030', // 'rgba(255,255,255, 0.05)',\n    },\n    primary: green,\n    secondary: grey,\n  },\n});\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/:user/:repo\">\n            <Repo />\n          </Route>\n          <Redirect\n            push\n            to={\n              process.env.REACT_APP_DefaultRepository ||\n              '/paulsancer/material-github'\n            }\n          />\n        </Switch>\n      </Router>\n    </div>\n  </ThemeProvider>\n);\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/under-construction.2b1c6a7a.png\";"],"sourceRoot":""}